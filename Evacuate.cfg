CONTRACT_TYPE
{
    // Unique name of the contract type (required)
    name = Evacuate
    title = Evacuate @/targetVessel1
    group = UsefulSpaceStations
    description = We're picking up some worrying readings from our instruments on @/targetVessel1. To be on the safe side, we think you had better evacuate! (quickly)
    synopsis = Evacuate @/targetVessel1
    completedMessage = Phew, it was a false alarm. Still, well done for saving everybody.
	weight = 0.4
    minExpiry = 1
    maxExpiry = 30
    deadline = 500
    cancellable = false
    declinable = false
    prestige = Significant
    rewardScience = 0.0
    rewardReputation = Random(1, 20.0)
    rewardFunds = Random(40000, 60000.0)
    failureReputation = Random(1, 10.0)
    failureFunds = Random(1, 10000.0)
    advanceFunds = Random(1, 10000.0)
	targetBody = @/targetBody1
		
	    DATA
    {
        type = Vessel
		uniqueValue = True
		requiredValue = true
        targetVessel1 = AllVessels().Where(v => v.VesselType() == Station && v.CrewCount()>0).Random()
    }
	DATA
	{
	type = CelestialBody
	uniqueValue = false
	requiredValue = true
	targetBody1 = @targetVessel1.CelestialBody()
	}
	
	PARAMETER
	{
    name = VesselParameterGroup
    type = VesselParameterGroup
    title = Fully evacuate @/targetVessel1
    vessel = @/targetVessel1
	
		PARAMETER
		{
        name = HasCrew
        type = HasCrew
		minCrew = 0
		maxCrew = 0
		title = Leave no Kerbals on board @/targetVessel1.
		 }
	}
	
	PARAMETER
	{
    name = VesselParameterGroup
    type = VesselParameterGroup
    title = Perform an Emergency Landing on @/targetBody1
    define = ServiceModule
	hideChildren = true
		
		PARAMETER
		{
		name = Any
		type = Any
			PARAMETER
			{
			name = Land
			type = ReachState
			targetBody = @/targetBody1
			situation = LANDED
			}
			PARAMETER
			{
			name = Land
			type = ReachState
			targetBody = @/targetBody1
			situation = SPLASHED
			}
		}
	}
}